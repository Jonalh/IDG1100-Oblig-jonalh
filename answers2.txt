6. What is the octal representation of a file that can be read and written only by its owner?
	
	- 600

7. In UNIX systems, what is the common name of the special user that can access and modify every file?
	
	- Root user (superuser, SUDO)

8. Which file permission classes are available in UNIX systems?

	- Read, Write, and Execute

9. As of 2020, which percentage of servers have UNIX-like OS?

	- More than 70%

10. The command ssh will:

	- Provide a secure encrypted connection between two hosts over an insecure network.

11. UNIX Command: access your current working directory

	- pwd

12. UNIX Command: rename files (give an example)

	- mv (mv example1.txt example2.txt)

13. UNIX Command: schedule the execution of programs in the future

	- * * * * * (minute, hour, dom, month, dow)

14. UNIX Command: Forcefully shutdown the command with process ID 123

	- kill 123, or kill -9 123 if a process resists to shut down

15. UNIX Command: access your root user

	- sudo -s

16. Crontab scheduled: At minute 30 on Sunday.

	- 30 * * * 0

17. Crontab scheduled: At minute 30 on day-of-month 15.

	- 30 * 15 * *

18. Crontab scheduled: At 05:30 on every day-of-week from Sunday through Monday in June.

	- 30 5 * 6 0-1

19. Script: print your name and date

	- echo "Jonas $(date)"

20. Script: add two numeric values, print the result

	- num1=5
	- num2=10
	- echo $(($num1 + $num2))

21. Script: inputs username, prints “USERNAME stored”

	- read -p  "Please enter your username: " username
	- echo "Username stored"

22. Script: Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.

	- host=$(hostname)
	- echo "This script is running on" $host

23. Script: Store the output of the working directory (from where the script is run) in a variable
then print the variable.

	- directory=$(pwd)
	- echo $directory

24. Create a step by step tutorial on how to create a cronjob that prints “Task scheduled at” + DATE. Cronjob is scheduled every 30 minutes on today’s date (only today).

	1. Write crontab -e to edit the cron job
	2. Write 30 * 16 11 * (todays date), it will execute every minute 30 on this day only
	3. After that write: echo "Task scheduled at $(date)"
	4. Assign it to a txt file: >> /home/example1.txt
	5. The line will look like this: 
	30 * 16 11 *      echo "Task scheduled at $(date)" >> /home/example1.txt
	6. Navigate to /home, and touch a file named example1.txt
	7. Start the cron service: service cron start
	8. Check the cron status: service cron status
	9. Cat the example1.txt file to view the output

25. Create a script that takes an input (letter or number) that will display the answer of a question. The script should when started list a menu for the user with the different questions that can be chosen and which corresponding letter the user will have to give as input to display the answer of the desired question. One of the possible inputs the user should be able to make is "q" for quitting the script. The menu should also have a default case where all the items is displayed again, or no changes is made if the user gives an invalid input. Hint: use a switch case to be able to handle the menu. Each option in the menu should lead to an echo of the answer



